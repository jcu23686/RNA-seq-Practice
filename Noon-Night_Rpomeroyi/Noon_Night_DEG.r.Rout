
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #Setting up working directory and loading R libraries
> 
> 	library(ballgown); library(genefilter); library(dplyr); library(devtools); library(ggplot2); library(cowplot)

Attaching package: ‘ballgown’

The following object is masked from ‘package:base’:

    structure


Attaching package: ‘dplyr’

The following objects are masked from ‘package:ballgown’:

    contains, expr, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: usethis

Attaching package: ‘ggplot2’

The following object is masked from ‘package:ballgown’:

    expr

> 
> #loading phenotypes and RNA seq FPKM data generated by Stringtie
> 
> 	pheno_data <- read.csv("phenodata.csv")
> 	bg <- ballgown(dataDir = "ballgown", samplePattern = "[D|E|F]", pData = pheno_data)
Mon Oct 23 14:52:41 2023
Mon Oct 23 14:52:41 2023: Reading linking tables
Mon Oct 23 14:52:41 2023: Reading intron data files
Mon Oct 23 14:52:41 2023: Merging intron data
Mon Oct 23 14:52:42 2023: Reading exon data files
Mon Oct 23 14:52:42 2023: Merging exon data
Mon Oct 23 14:52:42 2023: Reading transcript data files
Mon Oct 23 14:52:42 2023: Merging transcript data
Wrapping up the results
Mon Oct 23 14:52:42 2023
> 	bg_filt <- subset(bg, "rowVars(gexpr(bg)) >1", genomesubset=TRUE)
> 	results_genes <- stattest(bg_filt,feature="gene",covariate="time",getFC=TRUE, meas="FPKM")
> 
> #Genewise analysis
> 	results_genes$mean <- rowMeans(gexpr(bg_filt))
> 	results_genes_complete <- results_genes[complete.cases(results_genes), ]
> 
> # Make box plots for expression levels for all 14 libraries
> 	
> 	short_names=c("Noon_D08", "Night_D12", "Noon_E02", "Night_E05", "Noon_E06", "Night_E07", "Noon_E08", "Night_F01", "Noon_F03", "Night_F04", "Night_F05", "Noon_F06", "Night_F07", "Night_F09")
> 	fpkm = texpr(bg_filt,meas="FPKM")
> 	fpkm = log2(fpkm+1)
> 	colnames(fpkm) <- short_names
> 	outfile="NoonNightLib_boxblot.pdf"
> 	pdf(file=outfile)
> 	boxplot(fpkm,col=as.numeric(pheno_data$time)+1,names=short_names, las=2, ylab="log2(FPKM)", main="Distribution of FPKMs for all 14 libraries")
Warning message:
In boxplot.default(groups, ...) : NAs introduced by coercion
> 	dev.off()
null device 
          1 
> 
> # MDS Plots (similar to PCA)
> 
> 	sum = apply(fpkm[,], 1, sum)
> 	i = which(sum[] > 2)
> 	r=cor(fpkm[i,], use="pairwise.complete.obs", method="pearson")
> 	d=1-r
> 	mds=cmdscale(d, k=2, eig=TRUE)
> 	par(mfrow=c(1,1))
> 	outfile="Noon_Night_MDS.pdf"
> 	pdf(file=outfile)
> 	plot(mds$points, type="n", xlab="", ylab="", main="MDS distance plot (all non-zero genes) for all libraries", xlim=c(-0.25,0.25), ylim=c(-0.05,0.05))
> 	points(mds$points[,1], mds$points[,2], col="grey", cex=2, pch=16)
> 	text(mds$points[,1], mds$points[,2], short_names)
> 	dev.off()
pdf 
  2 
> 
> #DEG – differential expression analysis 
> 
> 	indices <- match(results_genes_complete$id, texpr(bg_filt, 'all')$gene_id)
> 	gene_name_for_results <- texpr(bg_filt, 'all')$t_name[indices]	
> 	results_genes_complete <- data.frame(geneNames=gene_name_for_results, results_genes_complete)
> 	sig<-results_genes_complete %>% filter(pval < 0.05)
> 	write.csv(sig, "Noon_Night_DEGs_pval.csv")
> 
> #MA plot (Log-Fold Change versus Log-Concentration) highlighting points with p-value < 0.05
> 
> d<-results_genes_complete[!(results_genes_complete$geneNames=="."),]
> 
> ggplot(results_genes_complete, aes(log2(mean), log2(fc), colour = pval<0.05)) + scale_color_manual(values=c("#999999", "#aa0a3c")) + geom_point(aes(alpha=pval<0.05)) + scale_alpha_manual(guide="none", values = c(0.1, 1)) + geom_hline(yintercept=0) +  xlim(-10, 20) + ylim(-8, 8) + theme_bw()
Warning message:
Removed 1 rows containing missing values (`geom_point()`). 
> 
> ggsave("MA_plot.noon_vs_night.pdf", height=5, width=7, useDingbats=FALSE)
Warning message:
Removed 1 rows containing missing values (`geom_point()`). 
> 
> #MA plot (Log-Fold Change versus Log-Concentration) highlighting points with q-value < 0.05 
> 
> ggplot(results_genes_complete, aes(log2(mean), log2(fc), colour = qval<0.05)) + scale_color_manual(values=c("#999999", "#aa0a3c")) + geom_point(aes(alpha=qval<0.05)) + scale_alpha_manual(guide="none", values = c(0.1, 1)) + geom_hline(yintercept=0) + xlim(-10, 20) + ylim(-8, 8) + theme_bw()
Warning message:
Removed 1 rows containing missing values (`geom_point()`). 
> 
> ggsave("MA_qvalue_plot.noon_vs_night.pdf", height=5, width=7, useDingbats=FALSE)
Warning message:
Removed 1 rows containing missing values (`geom_point()`). 
> 
> # Quit R
> 
> 	quit ()
> proc.time()
   user  system elapsed 
 15.883   0.559  16.963 
